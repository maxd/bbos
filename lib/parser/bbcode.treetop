require File.join(File.dirname(__FILE__), "ast", "bbdocument")
require File.join(File.dirname(__FILE__), "ast", "bbblock")
require File.join(File.dirname(__FILE__), "ast", "bbtag")
require File.join(File.dirname(__FILE__), "ast", "bbattribute")
require File.join(File.dirname(__FILE__), "ast", "bbattribute_value")
require File.join(File.dirname(__FILE__), "ast", "bbtext")

module BBos
  module Parser

    grammar BBCode

      rule document
        ( __block:block block_end )+ <BBos::Parser::BBDocument>
      end

      rule block
         ( text / bbtag )+ <BBos::Parser::BBBlock>
      end

      rule text
        ( '\\' ( '[' / ']' / '\\' ) / [^\[] )+ <BBos::Parser::BBText>
      end

      rule bbtag
        fullbbtag / emptybbtag
      end

      rule fullbbtag
        '[' __attributes:attribute+ ']' __content:block? '[/' name ']' <BBos::Parser::BBTag>
      end

      rule emptybbtag
        '[' __attributes:attribute+ '/]' <BBos::Parser::BBTag>
      end

      rule attribute
        __name:name __value:( '=' __string:(string / plain_string) )? whitespace <BBos::Parser::BBAttribute>
      end

      rule whitespace
        [ \t\r\n]*
      end

      rule name
        [a-zA-Z0-9]+
      end

      rule string
        '"' __content:('\"' / '\\' / !'"' .)* '"' <BBos::Parser::BBAttributeValue>
      end

      rule plain_string
        (!('/]' / ']' / ' ' / '\t') .)* <BBos::Parser::BBAttributeValue>
      end

      rule block_end
        newline [ \t]* newline / !(.)
      end

      rule newline
        "\r"? "\n"
      end
      
    end

  end

end